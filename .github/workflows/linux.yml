name: linux

on: [push, pull_request]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        cxx: [g++-10, clang++-9]
        build_type: [Debug, Release]
        std: [11]
        os: [ubuntu-18.04]
        include:
          - cxx: g++-8
            build_type: Debug
            std: 17
            install: sudo apt install g++-8
            os: ubuntu-18.04
          - cxx: g++-10
            build_type: Debug
            std: 17
            os: ubuntu-18.04
          - cxx: g++-11
            build_type: Debug
            std: 20
            os: ubuntu-20.04
            install: sudo apt install g++-11
          - cxx: clang++-8
            build_type: Debug
            std: 17
            cxxflags: -stdlib=libc++
            os: ubuntu-18.04
            install: sudo apt install clang-8 libc++-8-dev libc++abi-8-dev
          - cxx: clang++-9
            build_type: Debug
            std: 17
            os: ubuntu-18.04
          - cxx: clang++-11
            build_type: Debug
            std: 20
            os: ubuntu-20.04
          - cxx: clang++-11
            build_type: Debug
            std: 20
            cxxflags: -stdlib=libc++
            os: ubuntu-20.04
            install: sudo apt install libc++-11-dev libc++abi-11-dev

    steps:
    - uses: actions/checkout@v3
    - name: Create Build Environment
      run: |
        ${{matrix.install}}
        sudo apt update
        sudo apt install locales-all
        cmake -E make_directory ${{runner.workspace}}/build
        ls -l ${{runner.workspace}}
        ls -l ${{runner.workspace}}/build
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"
    - name: Install Conan
      run: |
        pip3 install conan
    - name: Consume conan
      working-directory: ${{runner.workspace}}/build
      run: |
        conan profile new default --detect
        conan profile update settings.build_type=${{matrix.build_type}} default
        conan install $GITHUB_WORKSPACE
    - name: Build conan
      working-directory: ${{runner.workspace}}/build
      env:
        CXX: ${{matrix.cxx}}
        CXXFLAGS: ${{matrix.cxxflags}}
      run: |
        conan build $GITHUB_WORKSPACE
    - name: Test conan
      working-directory: ${{runner.workspace}}/build
      run: |
        conan test $GITHUB_WORKSPACE
    - name: Package conan
      working-directory: ${{runner.workspace}}/build
      run: |
        conan export-pkg $GITHUB_WORKSPACE
